//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Enterprise.settings {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    internal sealed partial class enterprise : global::System.Configuration.ApplicationSettingsBase {
        
        private static enterprise defaultInstance = ((enterprise)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new enterprise())));
        
        public static enterprise Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://localhost:8080/ems/v78/ws")]
        public string emsUrl {
            get {
                return ((string)(this["emsUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool enableLogs {
            get {
                return ((bool)(this["enableLogs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ru")]
        public string language {
            get {
                return ((string)(this["language"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<haspscope>
  <feature>
    <name>Accounting</name>
    <id>1</id>
  </feature>
  <feature>
    <name>Stock</name>
    <id>2</id>
  </feature>
  <feature>
    <name>Staff</name>
    <id>3</id>
  </feature>
</haspscope>")]
        public global::System.Xml.XmlDocument scope {
            get {
                return ((global::System.Xml.XmlDocument)(this["scope"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<haspformat root=""hasp_info"">
  <hasp>
    <element name=""id"" />
    <element name=""type"" />
    <element name=""version"" />
    <element name=""hw_version"" />
    <element name=""key_model"" />
    <element name=""key_type"" />
    <element name=""form_factor"" />
    <element name=""hw_platform"" />
    <element name=""driverless"" />
    <element name=""fingerprint_change"" />
    <element name=""vclock_enabled"" />
    <product>
      <element name=""id"" />
      <element name=""name"" />
      <feature>
        <element name=""id"" />
        <element name=""name"" />
        <element name=""license"" />
        <element name=""locked"" />
      </feature>
    </product>
  </hasp>
</haspformat>")]
        public global::System.Xml.XmlDocument format {
            get {
                return ((global::System.Xml.XmlDocument)(this["format"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool enableApi {
            get {
                return ((bool)(this["enableApi"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("443")]
        public string portForTestConnection {
            get {
                return ((string)(this["portForTestConnection"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<vendorData>
  <batchCode>CDQDR</batchCode>
  <vendorCode>s6aRT+BgZhGQ5pnhfV178lXbsM1vxQkFDP8VdW5wKdGd/MnqsJccVuVH7KONQK0yuJQgVallmmjE9E6Uw7Sufx2/fklM6FmSoJIqjTqrIhlTz7IddIDGZhBvEigGf3HzWfYZK8urYbm0e4Kp4G9Mve3WXLWKG5mExNiVqj0peMpwrAPOe/XbKPxRj4xlQ6fekR80FmBlk1WNyCQm+v9EI1LjsaAju23UeryHabz8xn6XJjMhd4hlrFbWRHVcCSab5VPOiGO3ImGztZ5QhWbT1Q7mzbJXX31+EdMhwy8Rx+UMZJeDLLLoxq1qGkT93ffcDy/hcuKK440BiP38icvFMLIyCopmycHBxewPvTUk7NwrUSB0iQRu6pxBj4RWJU3feh5i2XlSI5mQcD3cyFh8wIXfXtjZ92XH8ejaBnruAgfffFKKyUzsWAcadMX8F6UMnp1LL9R3LjkKmn0hwMySTvnU3qkVpqOU3cr6gD9h0TxgS0ym1Q8Jojl/FiBpiKp0gDmUr0H57FMu1xx/cEvC0O5CSfiFMNSHWYuGjc7QvpANfDEdjWCVlvKSK5q7igXmLTe1ykfAceHH2CDXg22tnEHMa85tGZNilE7iw0r4Fx1kLflOOM7xOupj5mmJdKiNSL0WhZyM1Znpaz2IAEcQbNJzsXT1SoCz22ZXeMiM66qmkwv/k0/4p8SCEe3l6ggF31ir39yFL940Bs5flOa5s8HUlHJXclee1s4trwWowCxL80lpS0/YntugLBlIXsR+bfXl/46Tmw3GwGK6EfX9KAx1lQVepamTb8ENXQPoJuHm5Rx4U8oP+M2Lryvb1ZcRHREKJ6iACk7qcfeRuKhiFGLDHMjy7Ld/h1A/RNamUOkpDrZfTY+CpHm3PZ+La56O3ScR0uawz/FeCVyySlWy+aNEmS/lqdZk91cqwr+9EqrCb8vtEQYLiwtU11qH/epENUsXUoGzkKbD9gtkmSiWyg==</vendorCode>
</vendorData>")]
        public global::System.Xml.XmlDocument vendorCode {
            get {
                return ((global::System.Xml.XmlDocument)(this["vendorCode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<upclient>
  <param>
    <key>-url</key>
    <value>up.sentinelcloud.com</value>
  </param>
  <param>
    <key>-k</key>
    <value>eafe87d22cc2a49793276f4141c0ebb0</value>
  </param>
  <param>
    <key>-pc</key>
    <value>81fb31d4-0fbd-4699-91e8-a8d89361c7f8</value>
  </param>
  <param>
    <key>-v</key>
    <value>v1</value>
  </param>
  <param>
    <key>-check</key>
    <value>-check</value>
  </param>
  <param>
    <key>-st</key>
    <value>-st</value>
  </param>
  <param>
    <key>-l</key>
    <value>ru</value>
  </param>
  <param>
    <key>-log</key>
    <value>update.log</value>
  </param>
</upclient>")]
        public global::System.Xml.XmlDocument sentinelUpCallData {
            get {
                return ((global::System.Xml.XmlDocument)(this["sentinelUpCallData"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool enableDisplayAdvancedData {
            get {
                return ((bool)(this["enableDisplayAdvancedData"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool newActMechanism {
            get {
                return ((bool)(this["newActMechanism"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8.8.8.8")]
        public string addressForTestConnection {
            get {
                return ((string)(this["addressForTestConnection"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool enableInternetTest {
            get {
                return ((bool)(this["enableInternetTest"]));
            }
        }
    }
}
